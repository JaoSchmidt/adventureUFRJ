//COMPILAR: gcc c.c -o c -Wall -lncurses
#include <stdio.h>
#include <ncurses.h>
#include <unistd.h>

typedef struct estrutura_jogador{
    int x,y;
} jogador;

jogador limite(jogador p,int altura,int largura)
{
    if(p.y>altura)p.y=0;
    if(p.x>largura-3)p.x=0;
    if(p.y<0)p.y=altura;
    if(p.x<0)p.x=largura-3;
    return p;
}

void desenha(int x,int y,int jogador)
{
    mvprintw(0,x,"X%d Y%d",x,y);
    mvprintw(y,x,"\\%d/",jogador);
}

int main()
{
    int c=0,altura,largura;
    initscr();
    raw();
    getmaxyx(stdscr,altura,largura);
	nodelay(stdscr,TRUE);
    start_color();
    init_pair(1,COLOR_RED,COLOR_BLACK);
    init_pair(2,COLOR_BLUE,COLOR_BLACK);
    jogador p1,p2;p1.x=0;p1.y=0;p2.x=largura-3;p2.y=0;
    while(c!=127){
    c=getch();
    if(c=='w'){p1.y--;clear();}
    if(c=='a'){p1.x-=2;clear();}
    if(c=='s'){p1.y++;clear();}
    if(c=='d'){p1.x+=2;clear();}
    if(c=='8'){p2.y--;clear();}
    if(c=='4'){p2.x-=2;clear();}
    if(c=='5'){p2.y++;clear();}
    if(c=='6'){p2.x+=2;clear();}
    p1=limite(p1,altura,largura);
    p2=limite(p2,altura,largura);
    attron(COLOR_PAIR(1));
    desenha(p1.x,p1.y,1);
    attron(COLOR_PAIR(2));
    desenha(p2.x,p2.y,2);
    usleep(10000); 
    move(0,0);
    }
    endwin();
    return 0;
}
